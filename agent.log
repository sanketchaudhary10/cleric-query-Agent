INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Received query: How many restarts has the pod 'orange' had?
ERROR:root:OpenAI API Error: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.
ERROR:root:Error querying GPT-4: Error querying GPT-4: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.
ERROR:root:Error processing query: Failed to parse query using GPT-4.
Traceback (most recent call last):
  File "D:\cleric assignment\assignment\cleric-query-agent\gpt_utils.py", line 12, in query_gpt
    response = openai.ChatCompletion.create(
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\api_resources\chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\api_resources\abstract\engine_api_resource.py", line 149, in create
    ) = cls.__prepare_create_request(
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\api_resources\abstract\engine_api_resource.py", line 106, in __prepare_create_request
    requestor = api_requestor.APIRequestor(
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\api_requestor.py", line 138, in __init__
    self.api_key = key or util.default_api_key()
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\util.py", line 186, in default_api_key
    raise openai.error.AuthenticationError(
openai.error.AuthenticationError: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\cleric assignment\assignment\cleric-query-agent\gpt_utils.py", line 47, in parse_query_with_gpt
    response_content = query_gpt(prompt)
  File "D:\cleric assignment\assignment\cleric-query-agent\gpt_utils.py", line 19, in query_gpt
    raise RuntimeError(f"Error querying GPT-4: {e}")
RuntimeError: Error querying GPT-4: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\cleric assignment\assignment\cleric-query-agent\main.py", line 131, in handle_query
    intents, keywords = parse_query_with_gpt(request.query)
  File "D:\cleric assignment\assignment\cleric-query-agent\gpt_utils.py", line 62, in parse_query_with_gpt
    raise RuntimeError("Failed to parse query using GPT-4.")
RuntimeError: Failed to parse query using GPT-4.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Received query: How many restarts has the pod 'orange' had?
ERROR:root:OpenAI API Error: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.
ERROR:root:Error querying GPT-4: Error querying GPT-4: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.
ERROR:root:Error processing query: Failed to parse query using GPT-4.
Traceback (most recent call last):
  File "D:\cleric assignment\assignment\cleric-query-agent\gpt_utils.py", line 12, in query_gpt
    response = openai.ChatCompletion.create(
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\api_resources\chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\api_resources\abstract\engine_api_resource.py", line 149, in create
    ) = cls.__prepare_create_request(
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\api_resources\abstract\engine_api_resource.py", line 106, in __prepare_create_request
    requestor = api_requestor.APIRequestor(
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\api_requestor.py", line 138, in __init__
    self.api_key = key or util.default_api_key()
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\util.py", line 186, in default_api_key
    raise openai.error.AuthenticationError(
openai.error.AuthenticationError: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\cleric assignment\assignment\cleric-query-agent\gpt_utils.py", line 47, in parse_query_with_gpt
    response_content = query_gpt(prompt)
  File "D:\cleric assignment\assignment\cleric-query-agent\gpt_utils.py", line 19, in query_gpt
    raise RuntimeError(f"Error querying GPT-4: {e}")
RuntimeError: Error querying GPT-4: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\cleric assignment\assignment\cleric-query-agent\main.py", line 131, in handle_query
    intents, keywords = parse_query_with_gpt(request.query)
  File "D:\cleric assignment\assignment\cleric-query-agent\gpt_utils.py", line 62, in parse_query_with_gpt
    raise RuntimeError("Failed to parse query using GPT-4.")
RuntimeError: Failed to parse query using GPT-4.
INFO:root:Received query: How many restarts has the pod 'orange' had?
ERROR:root:OpenAI API Error: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.
ERROR:root:Error querying GPT-4: Error querying GPT-4: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.
ERROR:root:Error processing query: Failed to parse query using GPT-4.
Traceback (most recent call last):
  File "D:\cleric assignment\assignment\cleric-query-agent\gpt_utils.py", line 12, in query_gpt
    response = openai.ChatCompletion.create(
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\api_resources\chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\api_resources\abstract\engine_api_resource.py", line 149, in create
    ) = cls.__prepare_create_request(
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\api_resources\abstract\engine_api_resource.py", line 106, in __prepare_create_request
    requestor = api_requestor.APIRequestor(
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\api_requestor.py", line 138, in __init__
    self.api_key = key or util.default_api_key()
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\util.py", line 186, in default_api_key
    raise openai.error.AuthenticationError(
openai.error.AuthenticationError: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\cleric assignment\assignment\cleric-query-agent\gpt_utils.py", line 47, in parse_query_with_gpt
    response_content = query_gpt(prompt)
  File "D:\cleric assignment\assignment\cleric-query-agent\gpt_utils.py", line 19, in query_gpt
    raise RuntimeError(f"Error querying GPT-4: {e}")
RuntimeError: Error querying GPT-4: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\cleric assignment\assignment\cleric-query-agent\main.py", line 131, in handle_query
    intents, keywords = parse_query_with_gpt(request.query)
  File "D:\cleric assignment\assignment\cleric-query-agent\gpt_utils.py", line 62, in parse_query_with_gpt
    raise RuntimeError("Failed to parse query using GPT-4.")
RuntimeError: Failed to parse query using GPT-4.
INFO:root:Received query: How many restarts has the pod 'orange' had?
ERROR:root:OpenAI API Error: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.
ERROR:root:Error querying GPT-4: Error querying GPT-4: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.
ERROR:root:Error processing query: Failed to parse query using GPT-4.
Traceback (most recent call last):
  File "D:\cleric assignment\assignment\cleric-query-agent\gpt_utils.py", line 12, in query_gpt
    response = openai.ChatCompletion.create(
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\api_resources\chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\api_resources\abstract\engine_api_resource.py", line 149, in create
    ) = cls.__prepare_create_request(
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\api_resources\abstract\engine_api_resource.py", line 106, in __prepare_create_request
    requestor = api_requestor.APIRequestor(
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\api_requestor.py", line 138, in __init__
    self.api_key = key or util.default_api_key()
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\util.py", line 186, in default_api_key
    raise openai.error.AuthenticationError(
openai.error.AuthenticationError: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\cleric assignment\assignment\cleric-query-agent\gpt_utils.py", line 47, in parse_query_with_gpt
    response_content = query_gpt(prompt)
  File "D:\cleric assignment\assignment\cleric-query-agent\gpt_utils.py", line 19, in query_gpt
    raise RuntimeError(f"Error querying GPT-4: {e}")
RuntimeError: Error querying GPT-4: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\cleric assignment\assignment\cleric-query-agent\main.py", line 131, in handle_query
    intents, keywords = parse_query_with_gpt(request.query)
  File "D:\cleric assignment\assignment\cleric-query-agent\gpt_utils.py", line 62, in parse_query_with_gpt
    raise RuntimeError("Failed to parse query using GPT-4.")
RuntimeError: Failed to parse query using GPT-4.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Received query: How many restarts has the pod 'orange' had?
ERROR:root:OpenAI API Error: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.
ERROR:root:Error querying GPT-4: Error querying GPT-4: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.
ERROR:root:Error processing query: Failed to parse query using GPT-4.
Traceback (most recent call last):
  File "D:\cleric assignment\assignment\cleric-query-agent\gpt_utils.py", line 12, in query_gpt
    response = openai.ChatCompletion.create(
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\api_resources\chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\api_resources\abstract\engine_api_resource.py", line 149, in create
    ) = cls.__prepare_create_request(
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\api_resources\abstract\engine_api_resource.py", line 106, in __prepare_create_request
    requestor = api_requestor.APIRequestor(
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\api_requestor.py", line 138, in __init__
    self.api_key = key or util.default_api_key()
  File "D:\cleric assignment\assignment\venv\lib\site-packages\openai\util.py", line 186, in default_api_key
    raise openai.error.AuthenticationError(
openai.error.AuthenticationError: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\cleric assignment\assignment\cleric-query-agent\gpt_utils.py", line 47, in parse_query_with_gpt
    response_content = query_gpt(prompt)
  File "D:\cleric assignment\assignment\cleric-query-agent\gpt_utils.py", line 19, in query_gpt
    raise RuntimeError(f"Error querying GPT-4: {e}")
RuntimeError: Error querying GPT-4: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\cleric assignment\assignment\cleric-query-agent\main.py", line 131, in handle_query
    intents, keywords = parse_query_with_gpt(request.query)
  File "D:\cleric assignment\assignment\cleric-query-agent\gpt_utils.py", line 62, in parse_query_with_gpt
    raise RuntimeError("Failed to parse query using GPT-4.")
RuntimeError: Failed to parse query using GPT-4.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Received query: How many restarts has the pod 'orange' had?
INFO:root:GPT-4 Response: ```json
{
    "intents": {
        "pods": true,
        "namespace": false,
        "status": true,
        "deployments": false,
        "logs": false
    },
    "keywords": ["restarts", "pod", "orange"]
}
```
ERROR:root:Failed to decode GPT-4 response: Expecting value: line 1 column 1 (char 0)
ERROR:root:Raw response content: ```json
{
    "intents": {
        "pods": true,
        "namespace": false,
        "status": true,
        "deployments": false,
        "logs": false
    },
    "keywords": ["restarts", "pod", "orange"]
}
```
ERROR:root:Error processing query: Failed to parse query using GPT-4.
Traceback (most recent call last):
  File "D:\cleric assignment\assignment\cleric-query-agent\gpt_utils.py", line 53, in parse_query_with_gpt
    response_data = json.loads(response_content)
  File "D:\Downloads\python\Python-3.10.11\lib\json\__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "D:\Downloads\python\Python-3.10.11\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Downloads\python\Python-3.10.11\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\cleric assignment\assignment\cleric-query-agent\main.py", line 131, in handle_query
    intents, keywords = parse_query_with_gpt(request.query)
  File "D:\cleric assignment\assignment\cleric-query-agent\gpt_utils.py", line 61, in parse_query_with_gpt
    raise RuntimeError("Failed to parse query using GPT-4.")
RuntimeError: Failed to parse query using GPT-4.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Received query: How many restarts has the pod 'orange' had?
INFO:root:GPT-4 Response: ```json
{
    "intents": {
        "pods": true,
        "namespace": false,
        "status": true,
        "deployments": false,
        "logs": false
    },
    "keywords": ["restarts", "pod", "orange"]
}
```
INFO:root:Parsed intents: {'pods': True, 'namespace': False, 'status': True, 'deployments': False, 'logs': False}, keywords: ['restarts', 'pod', 'orange']
INFO:root:Fetching restart count for pod: restarts in namespace: default
WARNING:root:Pod 'restarts' not found in namespace 'default'.
INFO:root:Response: No restarts information found for pod 'restarts'.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Received query: How many restarts has the pod 'orange' had?
INFO:root:GPT-4 Response: ```json
{
    "intents": {
        "pods": true,
        "namespace": false,
        "status": true,
        "deployments": false,
        "logs": false
    },
    "keywords": ["pod", "orange", "restarts"]
}
```
INFO:root:Parsed intents: {'pods': True, 'namespace': False, 'status': True, 'deployments': False, 'logs': False}, keywords: ['pod', 'orange', 'restarts']
INFO:root:Fetching restart count for pod: pod in namespace: default
WARNING:root:Pod 'pod' not found in namespace 'default'.
INFO:root:Response: No restarts information found for pod 'pod'.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Received query: How many restarts has the pod 'orange' had?
INFO:root:GPT-4 Response: {
  "intents": {
    "pods": true,
    "namespace": false,
    "status": true,
    "deployments": false,
    "logs": false
  },
  "keywords": [
    "pod",
    "orange",
    "restarts"
  ]
}
INFO:root:Filtered Keywords: ['orange']
INFO:root:Parsed intents: {'pods': True, 'namespace': False, 'status': True, 'deployments': False, 'logs': False}, keywords: ['orange']
INFO:root:Fetching restart count for pod: orange in namespace: default
INFO:root:'orange' restarts: 6
INFO:root:Response: The pod 'orange' has restarted 6 times.
INFO:root:Received query: How many pods are in the default namespace?
INFO:root:GPT-4 Response: {
  "intents": {
    "pods": true,
    "namespace": true,
    "status": false,
    "deployments": false,
    "logs": false
  },
  "keywords": [
    "pods",
    "default",
    "namespace"
  ]
}
INFO:root:Filtered Keywords: ['pods', 'default', 'namespace']
INFO:root:Parsed intents: {'pods': True, 'namespace': True, 'status': False, 'deployments': False, 'logs': False}, keywords: ['pods', 'default', 'namespace']
INFO:root:Response: I'm sorry, I couldn't understand your query. Please try rephrasing.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Received query: How many pods are in the default namespace?
INFO:root:GPT-4 Response: {
    "intents": {
        "pods": true,
        "namespace": true,
        "status": false,
        "deployments": false,
        "logs": false
    },
    "keywords": ["default namespace"]
}
INFO:root:Parsed Intents: {'pods': True, 'namespace': True, 'status': False, 'deployments': False, 'logs': False}
INFO:root:Parsed Keywords: ['default namespace']
INFO:root:Response: I'm sorry, I couldn't understand your query. Please try rephrasing.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Received query: How many pods are in the default namespace?
INFO:root:GPT-4 Response: {
    "intents": {
        "pods": true,
        "namespace": true,
        "status": false,
        "deployments": false,
        "logs": false
    },
    "keywords": ["default namespace", "pods"]
}
INFO:root:Parsed Intents: {'pods': True, 'namespace': True, 'status': False, 'deployments': False, 'logs': False}
INFO:root:Parsed Keywords: ['default namespace', 'pods']
INFO:root:Response: There are 4 pods in the default namespace.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Received query: Which pod is spawned by bot-deployment?
INFO:root:GPT-4 Response: {
    "intents": {
        "pods": true,
        "namespace": false,
        "status": false,
        "deployments": true,
        "logs": false
    },
    "keywords": ["bot-deployment"]
}
INFO:root:Parsed Intents: {'pods': True, 'namespace': False, 'status': False, 'deployments': True, 'logs': False}
INFO:root:Parsed Keywords: ['bot-deployment']
INFO:root:Label selector for deployment 'bot-deployment': app=bot-deployment
INFO:root:Pods found for deployment 'bot-deployment': ['bot-deployment-66d64568bb-mc4h2']
INFO:root:Response: bot-deployment
INFO:root:Received query: Which pod is spawned by website-deployment?
INFO:root:GPT-4 Response: 
    {
        "intents": {
            "pods": true,
            "namespace": false,
            "status": false,
            "deployments": true,
            "logs": false
        },
        "keywords": ["website-deployment"]
    }
INFO:root:Parsed Intents: {'pods': True, 'namespace': False, 'status': False, 'deployments': True, 'logs': False}
INFO:root:Parsed Keywords: ['website-deployment']
INFO:root:Label selector for deployment 'website-deployment': app=website-deployment
INFO:root:Pods found for deployment 'website-deployment': ['website-deployment-dbc8b97cd-9ndzm']
INFO:root:Response: website-deployment
INFO:root:Received query: What is the status of all pods in the cluster?
INFO:root:GPT-4 Response: 
    {
        "intents": {
            "pods": true,
            "namespace": false,
            "status": true,
            "deployments": false,
            "logs": false
        },
        "keywords": ["status", "pods", "cluster"]
    }
INFO:root:Parsed Intents: {'pods': True, 'namespace': False, 'status': True, 'deployments': False, 'logs': False}
INFO:root:Parsed Keywords: ['status', 'pods', 'cluster']
INFO:root:Response: Status: apple is Running, bot-deployment-66d64568bb-mc4h2 is Running, orange is Running, website-deployment-dbc8b97cd-9ndzm is Running
INFO:root:Received query: What is the status of the pod named 'orange'?
INFO:root:GPT-4 Response: {
    "intents": {
        "pods": true,
        "namespace": false,
        "status": true,
        "deployments": false,
        "logs": false
    },
    "keywords": ["orange"]
}
INFO:root:Parsed Intents: {'pods': True, 'namespace': False, 'status': True, 'deployments': False, 'logs': False}
INFO:root:Parsed Keywords: ['orange']
INFO:root:Response: 'orange' is 'Running'.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Received query: What is the status of the pod named 'orange'?
INFO:root:GPT-4 Response: {
    "intents": {
        "pods": true,
        "namespace": false,
        "status": true,
        "deployments": false,
        "logs": false
    },
    "keywords": ["orange"]
}
INFO:root:Parsed Intents: {'pods': True, 'namespace': False, 'status': True, 'deployments': False, 'logs': False}
INFO:root:Parsed Keywords: ['orange']
INFO:root:Response: ''Running'.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Received query: Which pod is spawned by python-deployment?
INFO:root:GPT-4 Response: 
{
    "intents": {
        "pods": true,
        "namespace": false,
        "status": false,
        "deployments": true,
        "logs": false
    },
    "keywords": ["python-deployment"]
}
INFO:root:Parsed Intents: {'pods': True, 'namespace': False, 'status': False, 'deployments': True, 'logs': False}
INFO:root:Parsed Keywords: ['python-deployment']
WARNING:root:Deployment 'python-deployment' not found in namespace 'default'.
INFO:root:Response: No pods found for the deployment 'python-deployment'.
INFO:root:Received query: WHICH POD is spawned by BOT-DEPLOYMENT?
INFO:root:GPT-4 Response: {
    "intents": {
        "pods": true,
        "namespace": false,
        "status": false,
        "deployments": true,
        "logs": false
    },
    "keywords": ["BOT-DEPLOYMENT"]
}
INFO:root:Parsed Intents: {'pods': True, 'namespace': False, 'status': False, 'deployments': True, 'logs': False}
INFO:root:Parsed Keywords: ['BOT-DEPLOYMENT']
WARNING:root:Deployment 'BOT-DEPLOYMENT' not found in namespace 'default'.
INFO:root:Response: No pods found for the deployment 'BOT-DEPLOYMENT'.
INFO:root:Received query: How many restarts has the pod 'website-deployment' had?
INFO:root:GPT-4 Response: {
    "intents": {
        "pods": true,
        "namespace": false,
        "status": false,
        "deployments": true,
        "logs": false
    },
    "keywords": ["restarts", "website-deployment"]
}
INFO:root:Parsed Intents: {'pods': True, 'namespace': False, 'status': False, 'deployments': True, 'logs': False}
INFO:root:Parsed Keywords: ['restarts', 'website-deployment']
INFO:root:Fetching restart count for pod: restarts in namespace: default
WARNING:root:Pod 'restarts' not found in namespace 'default'.
INFO:root:Response: No restarts information found for pod 'restarts'.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Received query: What is the status of all pods in the cluster?
INFO:root:GPT-4 Response: 
{
    "intents": {
        "pods": true,
        "namespace": false,
        "status": true,
        "deployments": false,
        "logs": false
    },
    "keywords": ["status", "all", "pods", "cluster"]
}
INFO:root:Parsed Intents: {'pods': True, 'namespace': False, 'status': True, 'deployments': False, 'logs': False}
INFO:root:Parsed Keywords: ['status', 'all', 'pods', 'cluster']
INFO:root:Response: Status: apple is Running, bot-deployment-66d64568bb-mc4h2 is Running, orange is Running, website-deployment-dbc8b97cd-9ndzm is Running
INFO:root:Received query: How many nodes are there in the cluster?
INFO:root:GPT-4 Response: {
    "intents": {
        "pods": false,
        "namespace": false,
        "status": false,
        "deployments": false,
        "logs": false
    },
    "keywords": ["nodes", "cluster"]
}
INFO:root:Parsed Intents: {'pods': False, 'namespace': False, 'status': False, 'deployments': False, 'logs': False}
INFO:root:Parsed Keywords: ['nodes', 'cluster']
INFO:root:Response: I'm sorry, I couldn't understand your query. Please try rephrasing.
INFO:root:Received query: How many pods are running in the 'default' namespace?
INFO:root:GPT-4 Response: {
    "intents": {
        "pods": true,
        "namespace": true,
        "status": true,
        "deployments": false,
        "logs": false
    },
    "keywords": ["default", "running"]
}
INFO:root:Parsed Intents: {'pods': True, 'namespace': True, 'status': True, 'deployments': False, 'logs': False}
INFO:root:Parsed Keywords: ['default', 'running']
INFO:root:Response: 4
INFO:root:Received query: Which pod is spawned by bot-deployment?
INFO:root:GPT-4 Response: {
    "intents": {
        "pods": true,
        "namespace": false,
        "status": false,
        "deployments": true,
        "logs": false
    },
    "keywords": ["bot-deployment"]
}
INFO:root:Parsed Intents: {'pods': True, 'namespace': False, 'status': False, 'deployments': True, 'logs': False}
INFO:root:Parsed Keywords: ['bot-deployment']
INFO:root:Label selector for deployment 'bot-deployment': app=bot-deployment
INFO:root:Pods found for deployment 'bot-deployment': ['bot-deployment-66d64568bb-mc4h2']
INFO:root:Response: bot-deployment
INFO:root:Received query: Which pod is spawned by website-deployment?
INFO:root:GPT-4 Response: 
    {
        "intents": {
            "pods": true,
            "namespace": false,
            "status": false,
            "deployments": true,
            "logs": false
        },
        "keywords": ["website-deployment"]
    }
INFO:root:Parsed Intents: {'pods': True, 'namespace': False, 'status': False, 'deployments': True, 'logs': False}
INFO:root:Parsed Keywords: ['website-deployment']
INFO:root:Label selector for deployment 'website-deployment': app=website-deployment
INFO:root:Pods found for deployment 'website-deployment': ['website-deployment-dbc8b97cd-9ndzm']
INFO:root:Response: website-deployment
INFO:root:Received query: How many nodes are there in the cluster?
INFO:root:GPT-4 Response: 
    {
        "intents": {
            "pods": false,
            "namespace": false,
            "status": false,
            "deployments": false,
            "logs": false
        },
        "keywords": ["nodes", "cluster"]
    }
INFO:root:Parsed Intents: {'pods': False, 'namespace': False, 'status': False, 'deployments': False, 'logs': False}
INFO:root:Parsed Keywords: ['nodes', 'cluster']
INFO:root:Response: I'm sorry, I couldn't understand your query. Please try rephrasing.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Received query: How many nodes are there in the cluster?
INFO:root:GPT-4 Response: 
    {
        "intents": {
            "pods": false,
            "namespace": false,
            "status": false,
            "deployments": false,
            "logs": false
        },
        "keywords": ["nodes", "cluster"]
    }
INFO:root:Parsed Intents: {'pods': False, 'namespace': False, 'status': False, 'deployments': False, 'logs': False}
INFO:root:Parsed Keywords: ['nodes', 'cluster']
INFO:root:Response: There are 1 nodes in the cluster.
INFO:root:Received query: How many restarts has the pod 'website-deployment' had?
INFO:root:GPT-4 Response: {
    "intents": {
        "pods": true,
        "namespace": false,
        "status": false,
        "deployments": true,
        "logs": false
    },
    "keywords": ["restarts", "website-deployment"]
}
INFO:root:Parsed Intents: {'pods': True, 'namespace': False, 'status': False, 'deployments': True, 'logs': False}
INFO:root:Parsed Keywords: ['restarts', 'website-deployment']
INFO:root:Fetching restart count for pod: website-deployment in namespace: default
WARNING:root:Pod 'website-deployment' not found in namespace 'default'.
INFO:root:Response: No restarts information found for pod 'website-deployment'.
INFO:root:Received query: How many restarts has the pod 'bot-deployment' had?
INFO:root:GPT-4 Response: {
    "intents": {
        "pods": true,
        "namespace": false,
        "status": false,
        "deployments": true,
        "logs": false
    },
    "keywords": ["restarts", "bot-deployment"]
}
INFO:root:Parsed Intents: {'pods': True, 'namespace': False, 'status': False, 'deployments': True, 'logs': False}
INFO:root:Parsed Keywords: ['restarts', 'bot-deployment']
INFO:root:Fetching restart count for pod: bot-deployment in namespace: default
WARNING:root:Pod 'bot-deployment' not found in namespace 'default'.
INFO:root:Response: No restarts information found for pod 'bot-deployment'.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Received query: How many restarts has the pod 'bot-deployment' had?
INFO:root:GPT-4 Response: 
    {
        "intents": {
            "pods": true,
            "namespace": false,
            "status": true,
            "deployments": true,
            "logs": false
        },
        "keywords": ["bot-deployment", "restarts"]
    }
INFO:root:Parsed Intents: {'pods': True, 'namespace': False, 'status': True, 'deployments': True, 'logs': False}
INFO:root:Parsed Keywords: ['bot-deployment', 'restarts']
INFO:root:Fetching restart count for pod: bot-deployment in namespace: default
INFO:root:Found pod 'bot-deployment-66d64568bb-mc4h2' for query pod 'bot-deployment'. Restarts: 3
INFO:root:Response: 'bot-deployment' restarted 3 times
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Received query: How many restarts has the pod 'bot-deployment' had?
INFO:root:GPT-4 Response: {
    "intents": {
        "pods": true,
        "namespace": false,
        "status": false,
        "deployments": false,
        "logs": false
    },
    "keywords": ["restarts", "bot-deployment"]
}
INFO:root:Parsed Intents: {'pods': True, 'namespace': False, 'status': False, 'deployments': False, 'logs': False}
INFO:root:Parsed Keywords: ['restarts', 'bot-deployment']
INFO:root:Fetching restart count for pod: bot-deployment in namespace: default
INFO:root:Found pod 'bot-deployment-66d64568bb-mc4h2' for query pod 'bot-deployment'. Restarts: 3
INFO:root:Response: bot-deployment restarted 3 times
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Received query: How many restarts has the pod 'bot-deployment' had?
ERROR:root:OpenAI API Error: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.
ERROR:root:Error querying GPT-4: Error querying GPT-4: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.
ERROR:root:Error processing query: Failed to parse query using GPT-4.
Traceback (most recent call last):
  File "D:\cleric assignment\cleric-query-Agent\gpt_utils.py", line 16, in query_gpt
    response = openai.ChatCompletion.create(
  File "D:\cleric assignment\cleric-query-Agent\venv\lib\site-packages\openai\api_resources\chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "D:\cleric assignment\cleric-query-Agent\venv\lib\site-packages\openai\api_resources\abstract\engine_api_resource.py", line 149, in create
    ) = cls.__prepare_create_request(
  File "D:\cleric assignment\cleric-query-Agent\venv\lib\site-packages\openai\api_resources\abstract\engine_api_resource.py", line 106, in __prepare_create_request
    requestor = api_requestor.APIRequestor(
  File "D:\cleric assignment\cleric-query-Agent\venv\lib\site-packages\openai\api_requestor.py", line 138, in __init__
    self.api_key = key or util.default_api_key()
  File "D:\cleric assignment\cleric-query-Agent\venv\lib\site-packages\openai\util.py", line 186, in default_api_key
    raise openai.error.AuthenticationError(
openai.error.AuthenticationError: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\cleric assignment\cleric-query-Agent\gpt_utils.py", line 46, in parse_query_with_gpt
    response_content = query_gpt(prompt)
  File "D:\cleric assignment\cleric-query-Agent\gpt_utils.py", line 23, in query_gpt
    raise RuntimeError(f"Error querying GPT-4: {e}")
RuntimeError: Error querying GPT-4: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\cleric assignment\cleric-query-Agent\main.py", line 38, in handle_query
    intents, keywords = parse_query_with_gpt(request.query)
  File "D:\cleric assignment\cleric-query-Agent\gpt_utils.py", line 62, in parse_query_with_gpt
    raise RuntimeError("Failed to parse query using GPT-4.")
RuntimeError: Failed to parse query using GPT-4.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Application shutdown complete.
INFO:root:Kubernetes configuration initialized successfully.
INFO:root:Received query: How many restarts has the pod 'bot-deployment' had?
INFO:root:GPT-4 Response: {
    "intents": {
        "pods": true,
        "namespace": false,
        "status": false,
        "deployments": true,
        "logs": false
    },
    "keywords": ["bot-deployment", "restarts"]
}
INFO:root:Parsed Intents: {'pods': True, 'namespace': False, 'status': False, 'deployments': True, 'logs': False}
INFO:root:Parsed Keywords: ['bot-deployment', 'restarts']
INFO:root:Fetching restart count for pod: bot-deployment in namespace: default
INFO:root:Found pod 'bot-deployment-66d64568bb-mc4h2' for query pod 'bot-deployment'. Restarts: 4
INFO:root:Response: bot-deployment restarted 4 times
INFO:root:Application shutdown complete.
2024-12-09 12:32:18,934 INFO - Kubernetes configuration initialized successfully.
2024-12-09 12:32:19,395 INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://10.0.0.113:8000
2024-12-09 12:32:19,395 INFO - [33mPress CTRL+C to quit[0m
2024-12-09 12:33:59,966 INFO - 127.0.0.1 - - [09/Dec/2024 12:33:59] "[33mGET / HTTP/1.1[0m" 404 -
2024-12-09 12:34:00,387 INFO - 127.0.0.1 - - [09/Dec/2024 12:34:00] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
2024-12-09 12:34:09,251 INFO - 127.0.0.1 - - [09/Dec/2024 12:34:09] "[33mGET /docs HTTP/1.1[0m" 404 -
2024-12-09 12:34:15,391 INFO - 127.0.0.1 - - [09/Dec/2024 12:34:15] "[31m[1mGET /query HTTP/1.1[0m" 405 -
2024-12-09 12:36:01,809 INFO - 127.0.0.1 - - [09/Dec/2024 12:36:01] "[31m[1mGET /query HTTP/1.1[0m" 405 -
2024-12-09 12:36:08,142 INFO - 127.0.0.1 - - [09/Dec/2024 12:36:08] "[33mGET /docs HTTP/1.1[0m" 404 -
2024-12-09 12:38:29,738 INFO - 127.0.0.1 - - [09/Dec/2024 12:38:29] "[31m[1mGET /query HTTP/1.1[0m" 405 -
2024-12-09 12:39:03,699 INFO - 127.0.0.1 - - [09/Dec/2024 12:39:03] "[33mGET / HTTP/1.1[0m" 404 -
2024-12-09 12:39:07,540 INFO - 127.0.0.1 - - [09/Dec/2024 12:39:07] "[33mGET / HTTP/1.1[0m" 404 -
2024-12-09 12:40:59,904 INFO - Kubernetes configuration initialized successfully.
2024-12-09 12:40:59,985 INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://10.0.0.113:8000
2024-12-09 12:40:59,985 INFO - [33mPress CTRL+C to quit[0m
2024-12-09 12:41:05,871 INFO - 127.0.0.1 - - [09/Dec/2024 12:41:05] "GET / HTTP/1.1" 200 -
2024-12-09 12:41:11,539 INFO - 127.0.0.1 - - [09/Dec/2024 12:41:11] "[31m[1mGET /query HTTP/1.1[0m" 405 -
2024-12-09 12:41:16,352 INFO - 127.0.0.1 - - [09/Dec/2024 12:41:16] "[33mGET /docs HTTP/1.1[0m" 404 -
2024-12-09 12:41:22,287 INFO - 127.0.0.1 - - [09/Dec/2024 12:41:22] "GET / HTTP/1.1" 200 -
2024-12-09 12:41:42,896 INFO - 127.0.0.1 - - [09/Dec/2024 12:41:42] "[31m[1mGET /query HTTP/1.1[0m" 405 -
2024-12-09 12:52:16,913 INFO - Kubernetes configuration initialized successfully.
2024-12-09 12:52:16,993 INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://10.0.0.113:8000
2024-12-09 12:52:16,993 INFO - [33mPress CTRL+C to quit[0m
2024-12-09 12:53:29,968 INFO - 127.0.0.1 - - [09/Dec/2024 12:53:29] "[33mGET /docs HTTP/1.1[0m" 404 -
2024-12-09 12:53:33,367 INFO - 127.0.0.1 - - [09/Dec/2024 12:53:33] "GET / HTTP/1.1" 200 -
2024-12-09 12:54:27,767 INFO - Received query: How many pods are in the default namespace?
2024-12-09 12:54:27,814 DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2024-12-09 12:54:27,814 DEBUG - api_version=None data='{"model": "gpt-4", "messages": [{"role": "user", "content": "\\n    Parse the following query into intents and keywords. \\n    Intents should be structured as a dictionary indicating True/False for the following categories: pods, namespace, status, deployments, logs.\\n    Keywords should be a list of extracted Kubernetes-related terms or resource names.\\n\\n    Query: \\"How many pods are in the default namespace?\\"\\n\\n    Respond with a JSON object directly, without Markdown formatting or code blocks, in the following structure:\\n    {\\n        \\"intents\\": {\\n            \\"pods\\": bool,\\n            \\"namespace\\": bool,\\n            \\"status\\": bool,\\n            \\"deployments\\": bool,\\n            \\"logs\\": bool\\n        },\\n        \\"keywords\\": [list of keywords]\\n    }\\n    "}]}' message='Post details'
2024-12-09 12:54:31,867 DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=3429 request_id=req_38519af6b6add9da0dad7875a25cf70a response_code=200
2024-12-09 12:54:31,882 INFO - GPT-4 Response: 
    {
        "intents": {
            "pods": true,
            "namespace": true,
            "status": false,
            "deployments": false,
            "logs": false
        },
        "keywords": ["pods", "default namespace"]
    }
2024-12-09 12:54:31,882 INFO - Parsed Intents: {'pods': True, 'namespace': True, 'status': False, 'deployments': False, 'logs': False}
2024-12-09 12:54:31,882 INFO - Parsed Keywords: ['pods', 'default namespace']
2024-12-09 12:54:31,948 DEBUG - response body: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47758"},"items":[{"metadata":{"name":"apple","namespace":"default","uid":"eb4be5c6-2187-424d-8786-94273caa533f","resourceVersion":"46577","creationTimestamp":"2024-12-07T22:31:36Z","labels":{"app":"app1"},"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"app1\"},\"name\":\"apple\",\"namespace\":\"default\"},\"spec\":{\"containers\":[{\"image\":\"nginx:1.21.6\",\"name\":\"container1\",\"ports\":[{\"containerPort\":80}]}]}}\n"},"managedFields":[{"manager":"kubectl-client-side-apply","operation":"Update","apiVersion":"v1","time":"2024-12-07T22:31:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}},"f:labels":{".":{},"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"container1\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-09T18:30:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.58\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-hlzcw","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"container1","image":"nginx:1.21.6","ports":[{"containerPort":80,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-hlzcw","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"minikube","securityContext":{},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute","tolerationSeconds":300},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute","tolerationSeconds":300}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T22:31:36Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T22:31:36Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.58","podIPs":[{"ip":"10.244.0.58"}],"startTime":"2024-12-07T22:31:36Z","containerStatuses":[{"name":"container1","state":{"running":{"startedAt":"2024-12-09T18:30:08Z"}},"lastState":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2024-12-09T07:52:54Z","finishedAt":"2024-12-09T08:25:52Z","containerID":"docker://f9865519273daf1898d1cc2847aa03ad4d35adb824ed01261158ef68077a9c15"}},"ready":true,"restartCount":8,"image":"nginx:1.21.6","imageID":"docker-pullable://nginx@sha256:2bcabc23b45489fb0885d69a06ba1d648aeda973fae7bb981bafbb884165e514","containerID":"docker://e57819a53e6d215a73b20b180c4c2259e30951802db28a08d4eef1b8c5fb97c4","started":true,"volumeMounts":[{"name":"kube-api-access-hlzcw","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"bot-deployment-66d64568bb-mc4h2","generateName":"bot-deployment-66d64568bb-","namespace":"default","uid":"e5e47232-9053-4bdd-a573-6ce40d5c0e9a","resourceVersion":"46593","creationTimestamp":"2024-12-08T18:40:48Z","labels":{"app":"bot-deployment","pod-template-hash":"66d64568bb"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"ReplicaSet","name":"bot-deployment-66d64568bb","uid":"f9636762-8a26-4fde-a2fc-fe6cdc0cffc0","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-08T18:40:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:app":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f9636762-8a26-4fde-a2fc-fe6cdc0cffc0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-09T18:30:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.57\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-4nb74","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"nginx","image":"nginx","resources":{},"volumeMounts":[{"name":"kube-api-access-4nb74","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"minikube","securityContext":{},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute","tolerationSeconds":300},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute","tolerationSeconds":300}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:10Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-08T18:40:48Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:10Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:10Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-08T18:40:48Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.57","podIPs":[{"ip":"10.244.0.57"}],"startTime":"2024-12-08T18:40:48Z","containerStatuses":[{"name":"nginx","state":{"running":{"startedAt":"2024-12-09T18:30:09Z"}},"lastState":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2024-12-09T07:52:55Z","finishedAt":"2024-12-09T08:25:52Z","containerID":"docker://cfee6581bb94349407806962c6c130d8eb778a85b45647bbc1829b59da048207"}},"ready":true,"restartCount":5,"image":"nginx:latest","imageID":"docker-pullable://nginx@sha256:fb197595ebe76b9c0c14ab68159fd3c08bd067ec62300583543f0ebda353b5be","containerID":"docker://4113f7dfcd223802314aabef62f68391e13d55d87ac0e4db0a6054977f4618e6","started":true,"volumeMounts":[{"name":"kube-api-access-4nb74","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"orange","namespace":"default","uid":"afec77fc-8ede-4af6-9280-834023f56049","resourceVersion":"46589","creationTimestamp":"2024-12-07T22:31:36Z","labels":{"app":"app2"},"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"app2\"},\"name\":\"orange\",\"namespace\":\"default\"},\"spec\":{\"containers\":[{\"image\":\"httpd:2.4\",\"name\":\"container2\",\"ports\":[{\"containerPort\":80}]}]}}\n"},"managedFields":[{"manager":"kubectl-client-side-apply","operation":"Update","apiVersion":"v1","time":"2024-12-07T22:31:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}},"f:labels":{".":{},"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"container2\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-09T18:30:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.59\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-jfn99","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"container2","image":"httpd:2.4","ports":[{"containerPort":80,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-jfn99","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"minikube","securityContext":{},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute","tolerationSeconds":300},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute","tolerationSeconds":300}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T22:31:36Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T22:31:36Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.59","podIPs":[{"ip":"10.244.0.59"}],"startTime":"2024-12-07T22:31:36Z","containerStatuses":[{"name":"container2","state":{"running":{"startedAt":"2024-12-09T18:30:08Z"}},"lastState":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2024-12-09T07:52:54Z","finishedAt":"2024-12-09T08:25:53Z","containerID":"docker://d1f8cd4f11f8a73ef4efb3048e56d2d5adbc8f68d81f92511f8cff3f6e399913"}},"ready":true,"restartCount":8,"image":"httpd:2.4","imageID":"docker-pullable://httpd@sha256:f4c5139eda466e45814122d9bd8b886d8ef6877296126c09b76dbad72b03c336","containerID":"docker://1cc70925945b01fb809477ed1a59aa6c7c46e1a5025a859cf7b69f8b0d474119","started":true,"volumeMounts":[{"name":"kube-api-access-jfn99","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"website-deployment-dbc8b97cd-9ndzm","generateName":"website-deployment-dbc8b97cd-","namespace":"default","uid":"bf33556c-4c4b-4ef0-b06b-e2c4589428b4","resourceVersion":"46582","creationTimestamp":"2024-12-08T18:40:56Z","labels":{"app":"website-deployment","pod-template-hash":"dbc8b97cd"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"ReplicaSet","name":"website-deployment-dbc8b97cd","uid":"ad58dc6f-d54a-4fe8-bae3-d43d258b3220","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-08T18:40:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:app":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ad58dc6f-d54a-4fe8-bae3-d43d258b3220\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-09T18:30:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.56\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-fdrcz","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"httpd","image":"httpd","resources":{},"volumeMounts":[{"name":"kube-api-access-fdrcz","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"minikube","securityContext":{},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute","tolerationSeconds":300},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute","tolerationSeconds":300}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-08T18:40:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-08T18:40:56Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.56","podIPs":[{"ip":"10.244.0.56"}],"startTime":"2024-12-08T18:40:56Z","containerStatuses":[{"name":"httpd","state":{"running":{"startedAt":"2024-12-09T18:30:09Z"}},"lastState":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2024-12-09T07:52:55Z","finishedAt":"2024-12-09T08:25:53Z","containerID":"docker://6627e2a2d8f80c32429eb9f1525105addbd1c431db8853056a1f5138abb07df1"}},"ready":true,"restartCount":5,"image":"httpd:2.4","imageID":"docker-pullable://httpd@sha256:f4c5139eda466e45814122d9bd8b886d8ef6877296126c09b76dbad72b03c336","containerID":"docker://4bb495bf3ac2721ff57ea5839248c45135693158dd276815bd3c93f145320d86","started":true,"volumeMounts":[{"name":"kube-api-access-fdrcz","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

2024-12-09 12:54:31,975 INFO - Generated answer: There are 4 pods in the default namespace.
2024-12-09 12:54:32,031 INFO - 127.0.0.1 - - [09/Dec/2024 12:54:32] "POST /query HTTP/1.1" 200 -
2024-12-09 12:54:32,031 INFO - Received query: What is the status of all pods?
2024-12-09 12:54:32,031 DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2024-12-09 12:54:32,031 DEBUG - api_version=None data='{"model": "gpt-4", "messages": [{"role": "user", "content": "\\n    Parse the following query into intents and keywords. \\n    Intents should be structured as a dictionary indicating True/False for the following categories: pods, namespace, status, deployments, logs.\\n    Keywords should be a list of extracted Kubernetes-related terms or resource names.\\n\\n    Query: \\"What is the status of all pods?\\"\\n\\n    Respond with a JSON object directly, without Markdown formatting or code blocks, in the following structure:\\n    {\\n        \\"intents\\": {\\n            \\"pods\\": bool,\\n            \\"namespace\\": bool,\\n            \\"status\\": bool,\\n            \\"deployments\\": bool,\\n            \\"logs\\": bool\\n        },\\n        \\"keywords\\": [list of keywords]\\n    }\\n    "}]}' message='Post details'
2024-12-09 12:54:35,731 DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=3379 request_id=req_c9ce11939be665d4df2276d38d48a41e response_code=200
2024-12-09 12:54:35,731 INFO - GPT-4 Response: {
    "intents": {
        "pods": true,
        "namespace": false,
        "status": true,
        "deployments": false,
        "logs": false
    },
    "keywords": ["status", "pods"]
}
2024-12-09 12:54:35,731 INFO - Parsed Intents: {'pods': True, 'namespace': False, 'status': True, 'deployments': False, 'logs': False}
2024-12-09 12:54:35,731 INFO - Parsed Keywords: ['status', 'pods']
2024-12-09 12:54:35,746 DEBUG - response body: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47762"},"items":[{"metadata":{"name":"apple","namespace":"default","uid":"eb4be5c6-2187-424d-8786-94273caa533f","resourceVersion":"46577","creationTimestamp":"2024-12-07T22:31:36Z","labels":{"app":"app1"},"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"app1\"},\"name\":\"apple\",\"namespace\":\"default\"},\"spec\":{\"containers\":[{\"image\":\"nginx:1.21.6\",\"name\":\"container1\",\"ports\":[{\"containerPort\":80}]}]}}\n"},"managedFields":[{"manager":"kubectl-client-side-apply","operation":"Update","apiVersion":"v1","time":"2024-12-07T22:31:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}},"f:labels":{".":{},"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"container1\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-09T18:30:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.58\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-hlzcw","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"container1","image":"nginx:1.21.6","ports":[{"containerPort":80,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-hlzcw","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"minikube","securityContext":{},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute","tolerationSeconds":300},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute","tolerationSeconds":300}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T22:31:36Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T22:31:36Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.58","podIPs":[{"ip":"10.244.0.58"}],"startTime":"2024-12-07T22:31:36Z","containerStatuses":[{"name":"container1","state":{"running":{"startedAt":"2024-12-09T18:30:08Z"}},"lastState":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2024-12-09T07:52:54Z","finishedAt":"2024-12-09T08:25:52Z","containerID":"docker://f9865519273daf1898d1cc2847aa03ad4d35adb824ed01261158ef68077a9c15"}},"ready":true,"restartCount":8,"image":"nginx:1.21.6","imageID":"docker-pullable://nginx@sha256:2bcabc23b45489fb0885d69a06ba1d648aeda973fae7bb981bafbb884165e514","containerID":"docker://e57819a53e6d215a73b20b180c4c2259e30951802db28a08d4eef1b8c5fb97c4","started":true,"volumeMounts":[{"name":"kube-api-access-hlzcw","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"bot-deployment-66d64568bb-mc4h2","generateName":"bot-deployment-66d64568bb-","namespace":"default","uid":"e5e47232-9053-4bdd-a573-6ce40d5c0e9a","resourceVersion":"46593","creationTimestamp":"2024-12-08T18:40:48Z","labels":{"app":"bot-deployment","pod-template-hash":"66d64568bb"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"ReplicaSet","name":"bot-deployment-66d64568bb","uid":"f9636762-8a26-4fde-a2fc-fe6cdc0cffc0","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-08T18:40:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:app":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f9636762-8a26-4fde-a2fc-fe6cdc0cffc0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-09T18:30:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.57\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-4nb74","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"nginx","image":"nginx","resources":{},"volumeMounts":[{"name":"kube-api-access-4nb74","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"minikube","securityContext":{},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute","tolerationSeconds":300},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute","tolerationSeconds":300}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:10Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-08T18:40:48Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:10Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:10Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-08T18:40:48Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.57","podIPs":[{"ip":"10.244.0.57"}],"startTime":"2024-12-08T18:40:48Z","containerStatuses":[{"name":"nginx","state":{"running":{"startedAt":"2024-12-09T18:30:09Z"}},"lastState":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2024-12-09T07:52:55Z","finishedAt":"2024-12-09T08:25:52Z","containerID":"docker://cfee6581bb94349407806962c6c130d8eb778a85b45647bbc1829b59da048207"}},"ready":true,"restartCount":5,"image":"nginx:latest","imageID":"docker-pullable://nginx@sha256:fb197595ebe76b9c0c14ab68159fd3c08bd067ec62300583543f0ebda353b5be","containerID":"docker://4113f7dfcd223802314aabef62f68391e13d55d87ac0e4db0a6054977f4618e6","started":true,"volumeMounts":[{"name":"kube-api-access-4nb74","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"orange","namespace":"default","uid":"afec77fc-8ede-4af6-9280-834023f56049","resourceVersion":"46589","creationTimestamp":"2024-12-07T22:31:36Z","labels":{"app":"app2"},"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"app2\"},\"name\":\"orange\",\"namespace\":\"default\"},\"spec\":{\"containers\":[{\"image\":\"httpd:2.4\",\"name\":\"container2\",\"ports\":[{\"containerPort\":80}]}]}}\n"},"managedFields":[{"manager":"kubectl-client-side-apply","operation":"Update","apiVersion":"v1","time":"2024-12-07T22:31:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}},"f:labels":{".":{},"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"container2\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-09T18:30:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.59\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-jfn99","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"container2","image":"httpd:2.4","ports":[{"containerPort":80,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-jfn99","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"minikube","securityContext":{},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute","tolerationSeconds":300},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute","tolerationSeconds":300}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T22:31:36Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T22:31:36Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.59","podIPs":[{"ip":"10.244.0.59"}],"startTime":"2024-12-07T22:31:36Z","containerStatuses":[{"name":"container2","state":{"running":{"startedAt":"2024-12-09T18:30:08Z"}},"lastState":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2024-12-09T07:52:54Z","finishedAt":"2024-12-09T08:25:53Z","containerID":"docker://d1f8cd4f11f8a73ef4efb3048e56d2d5adbc8f68d81f92511f8cff3f6e399913"}},"ready":true,"restartCount":8,"image":"httpd:2.4","imageID":"docker-pullable://httpd@sha256:f4c5139eda466e45814122d9bd8b886d8ef6877296126c09b76dbad72b03c336","containerID":"docker://1cc70925945b01fb809477ed1a59aa6c7c46e1a5025a859cf7b69f8b0d474119","started":true,"volumeMounts":[{"name":"kube-api-access-jfn99","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"website-deployment-dbc8b97cd-9ndzm","generateName":"website-deployment-dbc8b97cd-","namespace":"default","uid":"bf33556c-4c4b-4ef0-b06b-e2c4589428b4","resourceVersion":"46582","creationTimestamp":"2024-12-08T18:40:56Z","labels":{"app":"website-deployment","pod-template-hash":"dbc8b97cd"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"ReplicaSet","name":"website-deployment-dbc8b97cd","uid":"ad58dc6f-d54a-4fe8-bae3-d43d258b3220","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-08T18:40:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:app":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ad58dc6f-d54a-4fe8-bae3-d43d258b3220\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-09T18:30:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.56\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-fdrcz","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"httpd","image":"httpd","resources":{},"volumeMounts":[{"name":"kube-api-access-fdrcz","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"minikube","securityContext":{},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute","tolerationSeconds":300},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute","tolerationSeconds":300}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-08T18:40:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-08T18:40:56Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.56","podIPs":[{"ip":"10.244.0.56"}],"startTime":"2024-12-08T18:40:56Z","containerStatuses":[{"name":"httpd","state":{"running":{"startedAt":"2024-12-09T18:30:09Z"}},"lastState":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2024-12-09T07:52:55Z","finishedAt":"2024-12-09T08:25:53Z","containerID":"docker://6627e2a2d8f80c32429eb9f1525105addbd1c431db8853056a1f5138abb07df1"}},"ready":true,"restartCount":5,"image":"httpd:2.4","imageID":"docker-pullable://httpd@sha256:f4c5139eda466e45814122d9bd8b886d8ef6877296126c09b76dbad72b03c336","containerID":"docker://4bb495bf3ac2721ff57ea5839248c45135693158dd276815bd3c93f145320d86","started":true,"volumeMounts":[{"name":"kube-api-access-fdrcz","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

2024-12-09 12:54:35,756 INFO - Generated answer: Status: apple is Running, bot-deployment-66d64568bb-mc4h2 is Running, orange is Running, website-deployment-dbc8b97cd-9ndzm is Running
2024-12-09 12:54:35,757 INFO - 127.0.0.1 - - [09/Dec/2024 12:54:35] "POST /query HTTP/1.1" 200 -
2024-12-09 12:54:35,761 INFO - Received query: How many nodes are in the cluster?
2024-12-09 12:54:35,761 DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2024-12-09 12:54:35,761 DEBUG - api_version=None data='{"model": "gpt-4", "messages": [{"role": "user", "content": "\\n    Parse the following query into intents and keywords. \\n    Intents should be structured as a dictionary indicating True/False for the following categories: pods, namespace, status, deployments, logs.\\n    Keywords should be a list of extracted Kubernetes-related terms or resource names.\\n\\n    Query: \\"How many nodes are in the cluster?\\"\\n\\n    Respond with a JSON object directly, without Markdown formatting or code blocks, in the following structure:\\n    {\\n        \\"intents\\": {\\n            \\"pods\\": bool,\\n            \\"namespace\\": bool,\\n            \\"status\\": bool,\\n            \\"deployments\\": bool,\\n            \\"logs\\": bool\\n        },\\n        \\"keywords\\": [list of keywords]\\n    }\\n    "}]}' message='Post details'
2024-12-09 12:54:38,850 DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=2811 request_id=req_0cb678aae2e08516fa95126bb537af9d response_code=200
2024-12-09 12:54:38,850 INFO - GPT-4 Response: {
    "intents": {
        "pods": false,
        "namespace": false,
        "status": false,
        "deployments": false,
        "logs": false
    },
    "keywords": ["nodes", "cluster"]
}
2024-12-09 12:54:38,850 INFO - Parsed Intents: {'pods': False, 'namespace': False, 'status': False, 'deployments': False, 'logs': False}
2024-12-09 12:54:38,850 INFO - Parsed Keywords: ['nodes', 'cluster']
2024-12-09 12:54:38,863 DEBUG - response body: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47764"},"items":[{"metadata":{"name":"apple","namespace":"default","uid":"eb4be5c6-2187-424d-8786-94273caa533f","resourceVersion":"46577","creationTimestamp":"2024-12-07T22:31:36Z","labels":{"app":"app1"},"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"app1\"},\"name\":\"apple\",\"namespace\":\"default\"},\"spec\":{\"containers\":[{\"image\":\"nginx:1.21.6\",\"name\":\"container1\",\"ports\":[{\"containerPort\":80}]}]}}\n"},"managedFields":[{"manager":"kubectl-client-side-apply","operation":"Update","apiVersion":"v1","time":"2024-12-07T22:31:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}},"f:labels":{".":{},"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"container1\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-09T18:30:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.58\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-hlzcw","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"container1","image":"nginx:1.21.6","ports":[{"containerPort":80,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-hlzcw","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"minikube","securityContext":{},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute","tolerationSeconds":300},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute","tolerationSeconds":300}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T22:31:36Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T22:31:36Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.58","podIPs":[{"ip":"10.244.0.58"}],"startTime":"2024-12-07T22:31:36Z","containerStatuses":[{"name":"container1","state":{"running":{"startedAt":"2024-12-09T18:30:08Z"}},"lastState":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2024-12-09T07:52:54Z","finishedAt":"2024-12-09T08:25:52Z","containerID":"docker://f9865519273daf1898d1cc2847aa03ad4d35adb824ed01261158ef68077a9c15"}},"ready":true,"restartCount":8,"image":"nginx:1.21.6","imageID":"docker-pullable://nginx@sha256:2bcabc23b45489fb0885d69a06ba1d648aeda973fae7bb981bafbb884165e514","containerID":"docker://e57819a53e6d215a73b20b180c4c2259e30951802db28a08d4eef1b8c5fb97c4","started":true,"volumeMounts":[{"name":"kube-api-access-hlzcw","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"bot-deployment-66d64568bb-mc4h2","generateName":"bot-deployment-66d64568bb-","namespace":"default","uid":"e5e47232-9053-4bdd-a573-6ce40d5c0e9a","resourceVersion":"46593","creationTimestamp":"2024-12-08T18:40:48Z","labels":{"app":"bot-deployment","pod-template-hash":"66d64568bb"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"ReplicaSet","name":"bot-deployment-66d64568bb","uid":"f9636762-8a26-4fde-a2fc-fe6cdc0cffc0","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-08T18:40:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:app":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f9636762-8a26-4fde-a2fc-fe6cdc0cffc0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-09T18:30:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.57\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-4nb74","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"nginx","image":"nginx","resources":{},"volumeMounts":[{"name":"kube-api-access-4nb74","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"minikube","securityContext":{},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute","tolerationSeconds":300},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute","tolerationSeconds":300}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:10Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-08T18:40:48Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:10Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:10Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-08T18:40:48Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.57","podIPs":[{"ip":"10.244.0.57"}],"startTime":"2024-12-08T18:40:48Z","containerStatuses":[{"name":"nginx","state":{"running":{"startedAt":"2024-12-09T18:30:09Z"}},"lastState":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2024-12-09T07:52:55Z","finishedAt":"2024-12-09T08:25:52Z","containerID":"docker://cfee6581bb94349407806962c6c130d8eb778a85b45647bbc1829b59da048207"}},"ready":true,"restartCount":5,"image":"nginx:latest","imageID":"docker-pullable://nginx@sha256:fb197595ebe76b9c0c14ab68159fd3c08bd067ec62300583543f0ebda353b5be","containerID":"docker://4113f7dfcd223802314aabef62f68391e13d55d87ac0e4db0a6054977f4618e6","started":true,"volumeMounts":[{"name":"kube-api-access-4nb74","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"orange","namespace":"default","uid":"afec77fc-8ede-4af6-9280-834023f56049","resourceVersion":"46589","creationTimestamp":"2024-12-07T22:31:36Z","labels":{"app":"app2"},"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"app2\"},\"name\":\"orange\",\"namespace\":\"default\"},\"spec\":{\"containers\":[{\"image\":\"httpd:2.4\",\"name\":\"container2\",\"ports\":[{\"containerPort\":80}]}]}}\n"},"managedFields":[{"manager":"kubectl-client-side-apply","operation":"Update","apiVersion":"v1","time":"2024-12-07T22:31:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}},"f:labels":{".":{},"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"container2\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-09T18:30:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.59\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-jfn99","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"container2","image":"httpd:2.4","ports":[{"containerPort":80,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-jfn99","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"minikube","securityContext":{},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute","tolerationSeconds":300},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute","tolerationSeconds":300}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T22:31:36Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T22:31:36Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.59","podIPs":[{"ip":"10.244.0.59"}],"startTime":"2024-12-07T22:31:36Z","containerStatuses":[{"name":"container2","state":{"running":{"startedAt":"2024-12-09T18:30:08Z"}},"lastState":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2024-12-09T07:52:54Z","finishedAt":"2024-12-09T08:25:53Z","containerID":"docker://d1f8cd4f11f8a73ef4efb3048e56d2d5adbc8f68d81f92511f8cff3f6e399913"}},"ready":true,"restartCount":8,"image":"httpd:2.4","imageID":"docker-pullable://httpd@sha256:f4c5139eda466e45814122d9bd8b886d8ef6877296126c09b76dbad72b03c336","containerID":"docker://1cc70925945b01fb809477ed1a59aa6c7c46e1a5025a859cf7b69f8b0d474119","started":true,"volumeMounts":[{"name":"kube-api-access-jfn99","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"website-deployment-dbc8b97cd-9ndzm","generateName":"website-deployment-dbc8b97cd-","namespace":"default","uid":"bf33556c-4c4b-4ef0-b06b-e2c4589428b4","resourceVersion":"46582","creationTimestamp":"2024-12-08T18:40:56Z","labels":{"app":"website-deployment","pod-template-hash":"dbc8b97cd"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"ReplicaSet","name":"website-deployment-dbc8b97cd","uid":"ad58dc6f-d54a-4fe8-bae3-d43d258b3220","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-08T18:40:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:app":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ad58dc6f-d54a-4fe8-bae3-d43d258b3220\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-09T18:30:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.56\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-fdrcz","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"httpd","image":"httpd","resources":{},"volumeMounts":[{"name":"kube-api-access-fdrcz","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"minikube","securityContext":{},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute","tolerationSeconds":300},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute","tolerationSeconds":300}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-08T18:40:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-08T18:40:56Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.56","podIPs":[{"ip":"10.244.0.56"}],"startTime":"2024-12-08T18:40:56Z","containerStatuses":[{"name":"httpd","state":{"running":{"startedAt":"2024-12-09T18:30:09Z"}},"lastState":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2024-12-09T07:52:55Z","finishedAt":"2024-12-09T08:25:53Z","containerID":"docker://6627e2a2d8f80c32429eb9f1525105addbd1c431db8853056a1f5138abb07df1"}},"ready":true,"restartCount":5,"image":"httpd:2.4","imageID":"docker-pullable://httpd@sha256:f4c5139eda466e45814122d9bd8b886d8ef6877296126c09b76dbad72b03c336","containerID":"docker://4bb495bf3ac2721ff57ea5839248c45135693158dd276815bd3c93f145320d86","started":true,"volumeMounts":[{"name":"kube-api-access-fdrcz","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

2024-12-09 12:54:38,869 INFO - Generated answer: There are 1 nodes in the cluster.
2024-12-09 12:54:38,881 INFO - 127.0.0.1 - - [09/Dec/2024 12:54:38] "POST /query HTTP/1.1" 200 -
2024-12-09 12:54:38,885 INFO - Received query: How many restarts has the pod bot-deployment experienced?
2024-12-09 12:54:38,886 DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2024-12-09 12:54:38,886 DEBUG - api_version=None data='{"model": "gpt-4", "messages": [{"role": "user", "content": "\\n    Parse the following query into intents and keywords. \\n    Intents should be structured as a dictionary indicating True/False for the following categories: pods, namespace, status, deployments, logs.\\n    Keywords should be a list of extracted Kubernetes-related terms or resource names.\\n\\n    Query: \\"How many restarts has the pod bot-deployment experienced?\\"\\n\\n    Respond with a JSON object directly, without Markdown formatting or code blocks, in the following structure:\\n    {\\n        \\"intents\\": {\\n            \\"pods\\": bool,\\n            \\"namespace\\": bool,\\n            \\"status\\": bool,\\n            \\"deployments\\": bool,\\n            \\"logs\\": bool\\n        },\\n        \\"keywords\\": [list of keywords]\\n    }\\n    "}]}' message='Post details'
2024-12-09 12:54:43,828 DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=4796 request_id=req_65c79d6fc106e349f032b34eb51fc8d1 response_code=200
2024-12-09 12:54:43,828 INFO - GPT-4 Response: {
    "intents": {
        "pods": true,
        "namespace": false,
        "status": false,
        "deployments": true,
        "logs": false
    },
    "keywords": ["restarts", "bot-deployment"]
}
2024-12-09 12:54:43,828 INFO - Parsed Intents: {'pods': True, 'namespace': False, 'status': False, 'deployments': True, 'logs': False}
2024-12-09 12:54:43,828 INFO - Parsed Keywords: ['restarts', 'bot-deployment']
2024-12-09 12:54:43,828 INFO - Fetching restart count for pod: bot-deployment in namespace: default
2024-12-09 12:54:43,842 DEBUG - response body: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47767"},"items":[{"metadata":{"name":"apple","namespace":"default","uid":"eb4be5c6-2187-424d-8786-94273caa533f","resourceVersion":"46577","creationTimestamp":"2024-12-07T22:31:36Z","labels":{"app":"app1"},"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"app1\"},\"name\":\"apple\",\"namespace\":\"default\"},\"spec\":{\"containers\":[{\"image\":\"nginx:1.21.6\",\"name\":\"container1\",\"ports\":[{\"containerPort\":80}]}]}}\n"},"managedFields":[{"manager":"kubectl-client-side-apply","operation":"Update","apiVersion":"v1","time":"2024-12-07T22:31:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}},"f:labels":{".":{},"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"container1\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-09T18:30:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.58\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-hlzcw","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"container1","image":"nginx:1.21.6","ports":[{"containerPort":80,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-hlzcw","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"minikube","securityContext":{},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute","tolerationSeconds":300},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute","tolerationSeconds":300}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T22:31:36Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T22:31:36Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.58","podIPs":[{"ip":"10.244.0.58"}],"startTime":"2024-12-07T22:31:36Z","containerStatuses":[{"name":"container1","state":{"running":{"startedAt":"2024-12-09T18:30:08Z"}},"lastState":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2024-12-09T07:52:54Z","finishedAt":"2024-12-09T08:25:52Z","containerID":"docker://f9865519273daf1898d1cc2847aa03ad4d35adb824ed01261158ef68077a9c15"}},"ready":true,"restartCount":8,"image":"nginx:1.21.6","imageID":"docker-pullable://nginx@sha256:2bcabc23b45489fb0885d69a06ba1d648aeda973fae7bb981bafbb884165e514","containerID":"docker://e57819a53e6d215a73b20b180c4c2259e30951802db28a08d4eef1b8c5fb97c4","started":true,"volumeMounts":[{"name":"kube-api-access-hlzcw","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"bot-deployment-66d64568bb-mc4h2","generateName":"bot-deployment-66d64568bb-","namespace":"default","uid":"e5e47232-9053-4bdd-a573-6ce40d5c0e9a","resourceVersion":"46593","creationTimestamp":"2024-12-08T18:40:48Z","labels":{"app":"bot-deployment","pod-template-hash":"66d64568bb"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"ReplicaSet","name":"bot-deployment-66d64568bb","uid":"f9636762-8a26-4fde-a2fc-fe6cdc0cffc0","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-08T18:40:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:app":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f9636762-8a26-4fde-a2fc-fe6cdc0cffc0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-09T18:30:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.57\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-4nb74","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"nginx","image":"nginx","resources":{},"volumeMounts":[{"name":"kube-api-access-4nb74","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"minikube","securityContext":{},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute","tolerationSeconds":300},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute","tolerationSeconds":300}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:10Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-08T18:40:48Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:10Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:10Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-08T18:40:48Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.57","podIPs":[{"ip":"10.244.0.57"}],"startTime":"2024-12-08T18:40:48Z","containerStatuses":[{"name":"nginx","state":{"running":{"startedAt":"2024-12-09T18:30:09Z"}},"lastState":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2024-12-09T07:52:55Z","finishedAt":"2024-12-09T08:25:52Z","containerID":"docker://cfee6581bb94349407806962c6c130d8eb778a85b45647bbc1829b59da048207"}},"ready":true,"restartCount":5,"image":"nginx:latest","imageID":"docker-pullable://nginx@sha256:fb197595ebe76b9c0c14ab68159fd3c08bd067ec62300583543f0ebda353b5be","containerID":"docker://4113f7dfcd223802314aabef62f68391e13d55d87ac0e4db0a6054977f4618e6","started":true,"volumeMounts":[{"name":"kube-api-access-4nb74","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"orange","namespace":"default","uid":"afec77fc-8ede-4af6-9280-834023f56049","resourceVersion":"46589","creationTimestamp":"2024-12-07T22:31:36Z","labels":{"app":"app2"},"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"app2\"},\"name\":\"orange\",\"namespace\":\"default\"},\"spec\":{\"containers\":[{\"image\":\"httpd:2.4\",\"name\":\"container2\",\"ports\":[{\"containerPort\":80}]}]}}\n"},"managedFields":[{"manager":"kubectl-client-side-apply","operation":"Update","apiVersion":"v1","time":"2024-12-07T22:31:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}},"f:labels":{".":{},"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"container2\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-09T18:30:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.59\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-jfn99","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"container2","image":"httpd:2.4","ports":[{"containerPort":80,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-jfn99","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"minikube","securityContext":{},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute","tolerationSeconds":300},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute","tolerationSeconds":300}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T22:31:36Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T22:31:36Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.59","podIPs":[{"ip":"10.244.0.59"}],"startTime":"2024-12-07T22:31:36Z","containerStatuses":[{"name":"container2","state":{"running":{"startedAt":"2024-12-09T18:30:08Z"}},"lastState":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2024-12-09T07:52:54Z","finishedAt":"2024-12-09T08:25:53Z","containerID":"docker://d1f8cd4f11f8a73ef4efb3048e56d2d5adbc8f68d81f92511f8cff3f6e399913"}},"ready":true,"restartCount":8,"image":"httpd:2.4","imageID":"docker-pullable://httpd@sha256:f4c5139eda466e45814122d9bd8b886d8ef6877296126c09b76dbad72b03c336","containerID":"docker://1cc70925945b01fb809477ed1a59aa6c7c46e1a5025a859cf7b69f8b0d474119","started":true,"volumeMounts":[{"name":"kube-api-access-jfn99","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"website-deployment-dbc8b97cd-9ndzm","generateName":"website-deployment-dbc8b97cd-","namespace":"default","uid":"bf33556c-4c4b-4ef0-b06b-e2c4589428b4","resourceVersion":"46582","creationTimestamp":"2024-12-08T18:40:56Z","labels":{"app":"website-deployment","pod-template-hash":"dbc8b97cd"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"ReplicaSet","name":"website-deployment-dbc8b97cd","uid":"ad58dc6f-d54a-4fe8-bae3-d43d258b3220","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-08T18:40:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:app":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ad58dc6f-d54a-4fe8-bae3-d43d258b3220\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-09T18:30:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.56\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-fdrcz","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"httpd","image":"httpd","resources":{},"volumeMounts":[{"name":"kube-api-access-fdrcz","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"minikube","securityContext":{},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute","tolerationSeconds":300},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute","tolerationSeconds":300}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-08T18:40:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-08T18:40:56Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.56","podIPs":[{"ip":"10.244.0.56"}],"startTime":"2024-12-08T18:40:56Z","containerStatuses":[{"name":"httpd","state":{"running":{"startedAt":"2024-12-09T18:30:09Z"}},"lastState":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2024-12-09T07:52:55Z","finishedAt":"2024-12-09T08:25:53Z","containerID":"docker://6627e2a2d8f80c32429eb9f1525105addbd1c431db8853056a1f5138abb07df1"}},"ready":true,"restartCount":5,"image":"httpd:2.4","imageID":"docker-pullable://httpd@sha256:f4c5139eda466e45814122d9bd8b886d8ef6877296126c09b76dbad72b03c336","containerID":"docker://4bb495bf3ac2721ff57ea5839248c45135693158dd276815bd3c93f145320d86","started":true,"volumeMounts":[{"name":"kube-api-access-fdrcz","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

2024-12-09 12:54:43,854 INFO - Found pod 'bot-deployment-66d64568bb-mc4h2' for query pod 'bot-deployment'. Restarts: 5
2024-12-09 12:54:43,855 INFO - Generated answer: bot-deployment restarted 5 times.
2024-12-09 12:54:43,855 INFO - 127.0.0.1 - - [09/Dec/2024 12:54:43] "POST /query HTTP/1.1" 200 -
2024-12-09 12:54:43,859 INFO - Received query: Which pod is spawned by website-deployment?
2024-12-09 12:54:43,859 DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2024-12-09 12:54:43,859 DEBUG - api_version=None data='{"model": "gpt-4", "messages": [{"role": "user", "content": "\\n    Parse the following query into intents and keywords. \\n    Intents should be structured as a dictionary indicating True/False for the following categories: pods, namespace, status, deployments, logs.\\n    Keywords should be a list of extracted Kubernetes-related terms or resource names.\\n\\n    Query: \\"Which pod is spawned by website-deployment?\\"\\n\\n    Respond with a JSON object directly, without Markdown formatting or code blocks, in the following structure:\\n    {\\n        \\"intents\\": {\\n            \\"pods\\": bool,\\n            \\"namespace\\": bool,\\n            \\"status\\": bool,\\n            \\"deployments\\": bool,\\n            \\"logs\\": bool\\n        },\\n        \\"keywords\\": [list of keywords]\\n    }\\n    "}]}' message='Post details'
2024-12-09 12:54:46,655 DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=2581 request_id=req_affbeb5074575d0c605dda8d9f2d475e response_code=200
2024-12-09 12:54:46,655 INFO - GPT-4 Response: 
    {
        "intents": {
            "pods": true,
            "namespace": false,
            "status": false,
            "deployments": true,
            "logs": false
        },
        "keywords": ["website-deployment"]
    }
2024-12-09 12:54:46,655 INFO - Parsed Intents: {'pods': True, 'namespace': False, 'status': False, 'deployments': True, 'logs': False}
2024-12-09 12:54:46,655 INFO - Parsed Keywords: ['website-deployment']
2024-12-09 12:54:46,668 DEBUG - response body: {"kind":"Deployment","apiVersion":"apps/v1","metadata":{"name":"website-deployment","namespace":"default","uid":"50ca44a8-4c26-4baf-b6d7-0f5b226d875c","resourceVersion":"46584","generation":1,"creationTimestamp":"2024-12-08T18:40:56Z","labels":{"app":"website-deployment"},"annotations":{"deployment.kubernetes.io/revision":"1"},"managedFields":[{"manager":"kubectl-create","operation":"Update","apiVersion":"apps/v1","time":"2024-12-08T18:40:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:labels":{".":{},"f:app":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}}},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"apps/v1","time":"2024-12-09T18:30:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}},"subresource":"status"}]},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"website-deployment"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"website-deployment"}},"spec":{"containers":[{"name":"httpd","image":"httpd","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}},"strategy":{"type":"RollingUpdate","rollingUpdate":{"maxUnavailable":"25%","maxSurge":"25%"}},"revisionHistoryLimit":10,"progressDeadlineSeconds":600},"status":{"observedGeneration":1,"replicas":1,"updatedReplicas":1,"readyReplicas":1,"availableReplicas":1,"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2024-12-08T18:40:59Z","lastTransitionTime":"2024-12-08T18:40:56Z","reason":"NewReplicaSetAvailable","message":"ReplicaSet \"website-deployment-dbc8b97cd\" has successfully progressed."},{"type":"Available","status":"True","lastUpdateTime":"2024-12-09T18:30:09Z","lastTransitionTime":"2024-12-09T18:30:09Z","reason":"MinimumReplicasAvailable","message":"Deployment has minimum availability."}]}}

2024-12-09 12:54:46,669 INFO - Label selector for deployment 'website-deployment': app=website-deployment
2024-12-09 12:54:46,678 DEBUG - response body: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47770"},"items":[{"metadata":{"name":"website-deployment-dbc8b97cd-9ndzm","generateName":"website-deployment-dbc8b97cd-","namespace":"default","uid":"bf33556c-4c4b-4ef0-b06b-e2c4589428b4","resourceVersion":"46582","creationTimestamp":"2024-12-08T18:40:56Z","labels":{"app":"website-deployment","pod-template-hash":"dbc8b97cd"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"ReplicaSet","name":"website-deployment-dbc8b97cd","uid":"ad58dc6f-d54a-4fe8-bae3-d43d258b3220","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-08T18:40:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:app":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ad58dc6f-d54a-4fe8-bae3-d43d258b3220\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-09T18:30:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.56\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-fdrcz","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"httpd","image":"httpd","resources":{},"volumeMounts":[{"name":"kube-api-access-fdrcz","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"minikube","securityContext":{},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute","tolerationSeconds":300},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute","tolerationSeconds":300}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-08T18:40:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-08T18:40:56Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.56","podIPs":[{"ip":"10.244.0.56"}],"startTime":"2024-12-08T18:40:56Z","containerStatuses":[{"name":"httpd","state":{"running":{"startedAt":"2024-12-09T18:30:09Z"}},"lastState":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2024-12-09T07:52:55Z","finishedAt":"2024-12-09T08:25:53Z","containerID":"docker://6627e2a2d8f80c32429eb9f1525105addbd1c431db8853056a1f5138abb07df1"}},"ready":true,"restartCount":5,"image":"httpd:2.4","imageID":"docker-pullable://httpd@sha256:f4c5139eda466e45814122d9bd8b886d8ef6877296126c09b76dbad72b03c336","containerID":"docker://4bb495bf3ac2721ff57ea5839248c45135693158dd276815bd3c93f145320d86","started":true,"volumeMounts":[{"name":"kube-api-access-fdrcz","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

2024-12-09 12:54:46,681 INFO - Pods found for deployment 'website-deployment': ['website-deployment-dbc8b97cd-9ndzm']
2024-12-09 12:54:46,682 INFO - Generated answer: website-deployment
2024-12-09 12:54:46,682 INFO - 127.0.0.1 - - [09/Dec/2024 12:54:46] "POST /query HTTP/1.1" 200 -
2024-12-09 12:54:46,686 INFO - Received query: What is the status of the pod named 'orange'?
2024-12-09 12:54:46,686 DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2024-12-09 12:54:46,686 DEBUG - api_version=None data='{"model": "gpt-4", "messages": [{"role": "user", "content": "\\n    Parse the following query into intents and keywords. \\n    Intents should be structured as a dictionary indicating True/False for the following categories: pods, namespace, status, deployments, logs.\\n    Keywords should be a list of extracted Kubernetes-related terms or resource names.\\n\\n    Query: \\"What is the status of the pod named \'orange\'?\\"\\n\\n    Respond with a JSON object directly, without Markdown formatting or code blocks, in the following structure:\\n    {\\n        \\"intents\\": {\\n            \\"pods\\": bool,\\n            \\"namespace\\": bool,\\n            \\"status\\": bool,\\n            \\"deployments\\": bool,\\n            \\"logs\\": bool\\n        },\\n        \\"keywords\\": [list of keywords]\\n    }\\n    "}]}' message='Post details'
2024-12-09 12:54:48,974 DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=2134 request_id=req_d055f30cdb949b87d50638b17eba9426 response_code=200
2024-12-09 12:54:48,974 INFO - GPT-4 Response: {
    "intents": {
        "pods": true,
        "namespace": false,
        "status": true,
        "deployments": false,
        "logs": false
    },
    "keywords": ["orange"]
}
2024-12-09 12:54:48,974 INFO - Parsed Intents: {'pods': True, 'namespace': False, 'status': True, 'deployments': False, 'logs': False}
2024-12-09 12:54:48,974 INFO - Parsed Keywords: ['orange']
2024-12-09 12:54:49,006 DEBUG - response body: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47772"},"items":[{"metadata":{"name":"apple","namespace":"default","uid":"eb4be5c6-2187-424d-8786-94273caa533f","resourceVersion":"46577","creationTimestamp":"2024-12-07T22:31:36Z","labels":{"app":"app1"},"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"app1\"},\"name\":\"apple\",\"namespace\":\"default\"},\"spec\":{\"containers\":[{\"image\":\"nginx:1.21.6\",\"name\":\"container1\",\"ports\":[{\"containerPort\":80}]}]}}\n"},"managedFields":[{"manager":"kubectl-client-side-apply","operation":"Update","apiVersion":"v1","time":"2024-12-07T22:31:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}},"f:labels":{".":{},"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"container1\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-09T18:30:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.58\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-hlzcw","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"container1","image":"nginx:1.21.6","ports":[{"containerPort":80,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-hlzcw","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"minikube","securityContext":{},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute","tolerationSeconds":300},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute","tolerationSeconds":300}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T22:31:36Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T22:31:36Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.58","podIPs":[{"ip":"10.244.0.58"}],"startTime":"2024-12-07T22:31:36Z","containerStatuses":[{"name":"container1","state":{"running":{"startedAt":"2024-12-09T18:30:08Z"}},"lastState":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2024-12-09T07:52:54Z","finishedAt":"2024-12-09T08:25:52Z","containerID":"docker://f9865519273daf1898d1cc2847aa03ad4d35adb824ed01261158ef68077a9c15"}},"ready":true,"restartCount":8,"image":"nginx:1.21.6","imageID":"docker-pullable://nginx@sha256:2bcabc23b45489fb0885d69a06ba1d648aeda973fae7bb981bafbb884165e514","containerID":"docker://e57819a53e6d215a73b20b180c4c2259e30951802db28a08d4eef1b8c5fb97c4","started":true,"volumeMounts":[{"name":"kube-api-access-hlzcw","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"bot-deployment-66d64568bb-mc4h2","generateName":"bot-deployment-66d64568bb-","namespace":"default","uid":"e5e47232-9053-4bdd-a573-6ce40d5c0e9a","resourceVersion":"46593","creationTimestamp":"2024-12-08T18:40:48Z","labels":{"app":"bot-deployment","pod-template-hash":"66d64568bb"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"ReplicaSet","name":"bot-deployment-66d64568bb","uid":"f9636762-8a26-4fde-a2fc-fe6cdc0cffc0","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-08T18:40:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:app":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f9636762-8a26-4fde-a2fc-fe6cdc0cffc0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-09T18:30:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.57\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-4nb74","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"nginx","image":"nginx","resources":{},"volumeMounts":[{"name":"kube-api-access-4nb74","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"minikube","securityContext":{},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute","tolerationSeconds":300},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute","tolerationSeconds":300}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:10Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-08T18:40:48Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:10Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:10Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-08T18:40:48Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.57","podIPs":[{"ip":"10.244.0.57"}],"startTime":"2024-12-08T18:40:48Z","containerStatuses":[{"name":"nginx","state":{"running":{"startedAt":"2024-12-09T18:30:09Z"}},"lastState":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2024-12-09T07:52:55Z","finishedAt":"2024-12-09T08:25:52Z","containerID":"docker://cfee6581bb94349407806962c6c130d8eb778a85b45647bbc1829b59da048207"}},"ready":true,"restartCount":5,"image":"nginx:latest","imageID":"docker-pullable://nginx@sha256:fb197595ebe76b9c0c14ab68159fd3c08bd067ec62300583543f0ebda353b5be","containerID":"docker://4113f7dfcd223802314aabef62f68391e13d55d87ac0e4db0a6054977f4618e6","started":true,"volumeMounts":[{"name":"kube-api-access-4nb74","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"orange","namespace":"default","uid":"afec77fc-8ede-4af6-9280-834023f56049","resourceVersion":"46589","creationTimestamp":"2024-12-07T22:31:36Z","labels":{"app":"app2"},"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"app2\"},\"name\":\"orange\",\"namespace\":\"default\"},\"spec\":{\"containers\":[{\"image\":\"httpd:2.4\",\"name\":\"container2\",\"ports\":[{\"containerPort\":80}]}]}}\n"},"managedFields":[{"manager":"kubectl-client-side-apply","operation":"Update","apiVersion":"v1","time":"2024-12-07T22:31:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}},"f:labels":{".":{},"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"container2\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-09T18:30:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.59\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-jfn99","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"container2","image":"httpd:2.4","ports":[{"containerPort":80,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-jfn99","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"minikube","securityContext":{},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute","tolerationSeconds":300},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute","tolerationSeconds":300}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T22:31:36Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-07T22:31:36Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.59","podIPs":[{"ip":"10.244.0.59"}],"startTime":"2024-12-07T22:31:36Z","containerStatuses":[{"name":"container2","state":{"running":{"startedAt":"2024-12-09T18:30:08Z"}},"lastState":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2024-12-09T07:52:54Z","finishedAt":"2024-12-09T08:25:53Z","containerID":"docker://d1f8cd4f11f8a73ef4efb3048e56d2d5adbc8f68d81f92511f8cff3f6e399913"}},"ready":true,"restartCount":8,"image":"httpd:2.4","imageID":"docker-pullable://httpd@sha256:f4c5139eda466e45814122d9bd8b886d8ef6877296126c09b76dbad72b03c336","containerID":"docker://1cc70925945b01fb809477ed1a59aa6c7c46e1a5025a859cf7b69f8b0d474119","started":true,"volumeMounts":[{"name":"kube-api-access-jfn99","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"website-deployment-dbc8b97cd-9ndzm","generateName":"website-deployment-dbc8b97cd-","namespace":"default","uid":"bf33556c-4c4b-4ef0-b06b-e2c4589428b4","resourceVersion":"46582","creationTimestamp":"2024-12-08T18:40:56Z","labels":{"app":"website-deployment","pod-template-hash":"dbc8b97cd"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"ReplicaSet","name":"website-deployment-dbc8b97cd","uid":"ad58dc6f-d54a-4fe8-bae3-d43d258b3220","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-08T18:40:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:app":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ad58dc6f-d54a-4fe8-bae3-d43d258b3220\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-09T18:30:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.56\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-fdrcz","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"httpd","image":"httpd","resources":{},"volumeMounts":[{"name":"kube-api-access-fdrcz","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"minikube","securityContext":{},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute","tolerationSeconds":300},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute","tolerationSeconds":300}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-08T18:40:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-09T18:30:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-08T18:40:56Z"}],"hostIP":"192.168.49.2","hostIPs":[{"ip":"192.168.49.2"}],"podIP":"10.244.0.56","podIPs":[{"ip":"10.244.0.56"}],"startTime":"2024-12-08T18:40:56Z","containerStatuses":[{"name":"httpd","state":{"running":{"startedAt":"2024-12-09T18:30:09Z"}},"lastState":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2024-12-09T07:52:55Z","finishedAt":"2024-12-09T08:25:53Z","containerID":"docker://6627e2a2d8f80c32429eb9f1525105addbd1c431db8853056a1f5138abb07df1"}},"ready":true,"restartCount":5,"image":"httpd:2.4","imageID":"docker-pullable://httpd@sha256:f4c5139eda466e45814122d9bd8b886d8ef6877296126c09b76dbad72b03c336","containerID":"docker://4bb495bf3ac2721ff57ea5839248c45135693158dd276815bd3c93f145320d86","started":true,"volumeMounts":[{"name":"kube-api-access-fdrcz","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

2024-12-09 12:54:49,029 INFO - Generated answer: 'orange' is 'Running'.
2024-12-09 12:54:49,030 INFO - 127.0.0.1 - - [09/Dec/2024 12:54:49] "POST /query HTTP/1.1" 200 -
